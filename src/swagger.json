{
  "swagger": "2.0",
  "info": {
    "title": "Book Library API",
    "description": "An Express API that stores information about readers, books, genres and authors",
    "version": "1.0"
  },
  "host": "localhost:4000",
  "paths": {
    "/readers": {
      "get": {
        "tags": ["readers"],
        "description": "Get all readers from system",
        "summary": "Get all readers",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Reader"
            }
          }
        }
      },
      "post": {
        "tags": ["readers"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "reader object that needs to be added to the database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Reader"
            }
          }
        ],
        "description": "Create new reader in system",
        "summary": "Post new reader",       
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "New reader is created",
            "schema": {
              "$ref": "#/definitions/Reader"
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/readers/{readerId}": {
      "get": {
        "tags": ["readers"],
        "description": "Return a single reader",
        "summary": "Find reader by ID",
        "parameters": [
          {
            "in": "path",
            "name": "readerId",
            "type": "integer",
            "description": "ID of reader object to be retrieved",
            "required": true,
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Reader"
            }
          },
          "404": {
            "description": "reader does not exist"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "tags": ["readers"],
        "description": "Update an reader data by patch request",
        "summary": "Update reader data by ID",
        "parameters": [
          {
            "in": "path",
            "name": "readerId",
            "type": "integer",
            "description": "reader object that needs to be updated",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated reader object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReaderPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Reader"
            }
          },
          "404": {
            "description": "reader does not exist"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": ["readers"],
        "description": "Delete a single reader",
        "summary": "Delete reader by ID",
        "parameters": [
          {
            "in": "path",
            "name": "readerId",
            "type": "integer",
            "description": "reader object to delete from database",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Reader"
            }
          },
          "404": {
            "description": "reader does not exist"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/books": {
      "get": {
        "tags": ["books"],
        "description": "Get all books from system",
        "summary": "Get all books",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Book"
            }
          }
        }
      },
      "post": {
        "tags": ["books"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "book object that needs to be added to the database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Book"
            }
          }
        ],
        "description": "Create new book in system",
        "summary": "Post new book",       
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "New book is created",
            "schema": {
              "$ref": "#/definitions/Book"
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/books/{bookId}": {
      "get": {
        "tags": ["books"],
        "description": "Return a single book",
        "summary": "Find book by ID",
        "parameters": [
          {
            "in": "path",
            "name": "bookId",
            "type": "integer",
            "description": "ID of book object to be retrieved",
            "required": true,
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Book"
            }
          },
          "404": {
            "description": "book does not exist"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "tags": ["books"],
        "description": "Update an book data by patch request",
        "summary": "Update book data by ID",
        "parameters": [
          {
            "in": "path",
            "name": "bookId",
            "type": "integer",
            "description": "book object that needs to be updated",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated book object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BookPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Book"
            }
          },
          "404": {
            "description": "book does not exist"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": ["books"],
        "description": "Delete a single book",
        "summary": "Delete book by ID",
        "parameters": [
          {
            "in": "path",
            "name": "bookId",
            "type": "integer",
            "description": "book object to delete from database",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Book"
            }
          },
          "404": {
            "description": "book does not exist"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/authors": {
      "get": {
        "tags": ["authors"],
        "description": "Get all authors from system",
        "summary": "Get all authors",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Author"
            }
          }
        }
      },
      "post": {
        "tags": ["authors"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "author object that needs to be added to the database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Author"
            }
          }
        ],
        "description": "Create new author in system",
        "summary": "Post new Author",       
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "New author is created",
            "schema": {
              "$ref": "#/definitions/Author"
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/authors/{authorId}": {
      "get": {
        "tags": ["authors"],
        "description": "Return a single Author",
        "summary": "Find author by ID",
        "parameters": [
          {
            "in": "path",
            "name": "authorId",
            "type": "integer",
            "description": "ID of author object to be retrieved",
            "required": true,
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Author"
            }
          },
          "404": {
            "description": "author does not exist"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "tags": ["authors"],
        "description": "Update an author data by patch request",
        "summary": "Update author data by ID",
        "parameters": [
          {
            "in": "path",
            "name": "authorId",
            "type": "integer",
            "description": "author object that needs to be updated",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated author object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/authorPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Author"
            }
          },
          "404": {
            "description": "author does not exist"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": ["authors"],
        "description": "Delete a single Author",
        "summary": "Delete author by ID",
        "parameters": [
          {
            "in": "path",
            "name": "authorId",
            "type": "integer",
            "description": "author object to delete from database",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Author"
            }
          },
          "404": {
            "description": "author does not exist"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/genres": {
      "get": {
        "tags": ["genres"],
        "description": "Get all genres from system",
        "summary": "Get all genres",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Genre"
            }
          }
        }
      },
      "post": {
        "tags": ["genres"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "genre object that needs to be added to the database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Genre"
            }
          }
        ],
        "description": "Create new genre in system",
        "summary": "Post new genre",       
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "New genre is created",
            "schema": {
              "$ref": "#/definitions/Genre"
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/genres/{genreId}": {
      "get": {
        "tags": ["genres"],
        "description": "Return a single genre",
        "summary": "Find genre by ID",
        "parameters": [
          {
            "in": "path",
            "name": "genreId",
            "type": "integer",
            "description": "ID of genre object to be retrieved",
            "required": true,
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Genre"
            }
          },
          "404": {
            "description": "genre does not exist"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "tags": ["genres"],
        "description": "Update an genre data by patch request",
        "summary": "Update genre data by ID",
        "parameters": [
          {
            "in": "path",
            "name": "genreId",
            "type": "integer",
            "description": "genre object that needs to be updated",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated genre object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenrePatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Genre"
            }
          },
          "404": {
            "description": "genre does not exist"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": ["genres"],
        "description": "Delete a single genre",
        "summary": "Delete genre by ID",
        "parameters": [
          {
            "in": "path",
            "name": "genreId",
            "type": "integer",
            "description": "genre object to delete from database",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Genre"
            }
          },
          "404": {
            "description": "genre does not exist"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "definitions": {
    "Reader": {
      "type": "object",
      "required": ["name", "email", "password"],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "reader ID",
          "readOnly": true
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "ReaderPatch": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "Book": {
      "type": "object",
      "required": ["title", "ISBN"],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "reader ID",
          "readOnly": true
        },
        "title": {
          "type": "string"
        },
        "ISBN": {
          "type": "string"
        }
      }
    },
    "BookPatch": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "ISBN": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "Author": {
      "type": "object",
      "required": ["author"],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "reader ID",
          "readOnly": true
        },
        "author": {
          "type": "string"
        }
      }
    },
    "AuthorPatch": {
      "type": "object",
      "properties": {
        "author": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "Genre": {
      "type": "object",
      "required": ["genre"],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "reader ID",
          "readOnly": true
        },
        "genre": {
          "type": "string"
        }
      }
    },
    "GenrePatch": {
      "type": "object",
      "properties": {
        "genre": {
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}